{"version":3,"sources":["components/Cards/Cards.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CoutryPicker/CoutryPicker.jsx","App.js","index.js","App.module.css","components/Chart/Chart.module.css","components/CoutryPicker/CountryPicker.module.css","images/covid19.png"],"names":["module","exports","Cards","data","confirmed","recovered","deaths","lastUpdate","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","value","duration","separator","colr","Date","toDateString","url","fetchData","country","a","changeableUrl","axios","get","fetchDailyData","map","date","reportDate","total","fetchCountries","countries","name","Chart","useState","dailyData","setDailyData","useEffect","initialDailyData","fetchMyAPI","barChart","labels","datasets","label","backgroundColor","options","legend","display","title","text","lineChart","borderColor","fill","CountryPicker","handleCountryChange","fetchedCountries","setFetchedCountries","fetchAPI","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","key","App","state","fetchedData","setState","this","image","src","coronaImage","alt","React","Component","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2d0f0203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__3bjn6\",\"card\":\"Cards_card__eGUfZ\",\"infected\":\"Cards_infected__-adYp\",\"recovered\":\"Cards_recovered__1aizD\",\"deaths\":\"Cards_deaths__Qdjzq\"};","import React from 'react'\nimport {Card, CardContent, Typography, Grid} from '@material-ui/core'\nimport CountUp from 'react-countup'\nimport cx from 'classnames'\n\nimport styles from './Cards.module.css'\n\n\nconst Cards = ({data: {confirmed, recovered, deaths, lastUpdate}}) =>{\n    if(!confirmed){\n        return 'Loading...'\n    }\n\n    return (\n        <div className={styles.container}>\n            <Grid container spacing={3} justify=\"center\">\n                {/* full size for mobile (12),  medium/upper devices less (3)*/}\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.infected)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Infected</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={confirmed.value}\n                                duration={2.5}\n                                separator=\".\"\n                            />\n                        </Typography>\n                        <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of active cases of Covid19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.recovered)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Recovered</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={recovered.value}\n                                duration={2.5}\n                                separator=\".\"\n                            />\n                        </Typography>\n                        <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of recoveries of Covid19</Typography>\n                    </CardContent>\n                </Grid>\n                <Grid item component={Card} xs={12} md={3} className={cx(styles.card, styles.deaths)}>\n                    <CardContent>\n                        <Typography color=\"textSecondary\" gutterBottom>Deaths</Typography>\n                        <Typography variant=\"h5\">\n                            <CountUp \n                                start={0}\n                                end={deaths.value}\n                                duration={2.5}\n                                separator=\".\"\n                            />\n                        </Typography>\n                        <Typography colr=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\n                        <Typography variant=\"body2\">Number of deaths caused by Covid19</Typography>\n                    </CardContent>\n                </Grid>\n            </Grid>\n        </div>\n    )\n}\n\nexport default Cards","import axios from 'axios'\n\nconst url = \"https://covid19.mathdro.id/api\"\n\nexport const fetchData =  async(country) => {\n    let changeableUrl = url\n\n    if(country){\n        changeableUrl = `${url}/countries/${country}`\n    }\n\n    try {\n        const { data: {confirmed, recovered, deaths, lastUpdate} } = await axios.get(changeableUrl)\n\n        return {confirmed, recovered, deaths, lastUpdate}\n\n    } catch (error) {\n       return error\n    }\n}\n\nexport const fetchDailyData = async () => {\n    try {\n        const {data} = await axios.get(`${url}/daily`)\n\n        return data.map(({ \n            confirmed, deaths, reportDate: date }) => ({ \n                confirmed: confirmed.total, \n                deaths: deaths.total, \n                date }))\n    } catch (error) {\n        \n    }\n}\n\nexport const fetchCountries = async () => {\n    try {\n        const {data: {countries}} = await axios.get(`${url}/countries`)\n        return countries.map((country)=> country.name)\n    } catch (error) {\n        return error\n    }\n}","import React, { useState, useEffect } from 'react';\nimport { Line, Bar } from 'react-chartjs-2';\n\n\nimport { fetchDailyData } from '../../api';\n\n\nimport styles from './Chart.module.css';\n\n\nconst Chart = ({ data: { confirmed, recovered, deaths }, country }) => {\n  const [dailyData, setDailyData] = useState({});\n\n\n  useEffect(() => {\n    const fetchMyAPI = async () => {\n      const initialDailyData = await fetchDailyData();\n\n\n      setDailyData(initialDailyData);\n    };\n\n\n    fetchMyAPI();\n  }, []);\n\n\n  const barChart = (\n    confirmed ? (\n      <Bar\n        data={{\n          labels: ['Infected', 'Recovered', 'Deaths'],\n          datasets: [\n            {\n              label: 'People',\n              backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\n              data: [confirmed.value, recovered.value, deaths.value],\n            },\n          ],\n        }}\n        options={{\n          legend: { display: false },\n          title: { display: true, text: `Current state in ${country}` },\n        }}\n      />\n    ) : null\n  );\n\n\n  const lineChart = (\n    dailyData[0] ? (\n      <Line\n        data={{\n          labels: dailyData.map(({ date }) => date),\n          datasets: [{\n            data: dailyData.map((data) => data.confirmed),\n            label: 'Infected',\n            borderColor: '#3333ff',\n            fill: true,\n          }, {\n            data: dailyData.map((data) => data.deaths),\n            label: 'Deaths',\n            borderColor: 'red',\n            backgroundColor: 'rgba(255, 0, 0, 0.5)',\n            fill: true,\n          },\n          ],\n        }}\n      />\n    ) : null\n  );\n\n\n  return (\n    <div className={styles.container}>\n      {country ? barChart : lineChart}\n    </div>\n  );\n};\n\n\nexport default Chart;","import React, {useState, useEffect} from 'react'\nimport {NativeSelect, FormControl} from '@material-ui/core'\n\nimport styles from './CountryPicker.module.css'\n\nimport {fetchCountries} from '../../api'\n\nconst CountryPicker = ({handleCountryChange}) => {\n    const [fetchedCountries, setFetchedCountries] = useState([])\n    \n    useEffect(() => {\n        const fetchAPI = async () => {\n            setFetchedCountries(await fetchCountries())\n        }\n\n        fetchAPI()\n    }, [setFetchedCountries])\n\n    // console.log(fetchedCountries)\n    \n    \n    return (\n        <FormControl className={styles.formControl}>\n            <NativeSelect defaultValue=\"\" onChange={(e) => handleCountryChange(e.target.value)}>\n                <option value=\"\">Global</option>\n                {fetchedCountries.map((country, i) => <option key={i} value={country}>{country}</option>)}\n            </NativeSelect>\n        </FormControl>\n    )\n}\n\nexport default CountryPicker","import React from 'react'\n\nimport {Cards, Chart, CountryPicker} from './components'\nimport styles from './App.module.css'\nimport { fetchData} from './api/index'\n\nimport coronaImage from './images/covid19.png'\n\nclass App extends React.Component{\n\n    state = {\n        data: {},\n        country:'',\n    }\n\n    async componentDidMount(){\n        const fetchedData = await fetchData()\n\n        this.setState({data: fetchedData})\n    }\n\n    handleCountryChange = async (country) => {\n        // fetch data\n        const fetchedData = await fetchData(country)\n        // set state\n        this.setState({ data: fetchedData, country: country})\n    }\n\n    render(){\n        const {data, country} = this.state\n        \n        \n        return(\n            <div className={styles.container}>\n                <img className= {styles.image} src={coronaImage} alt='Covid-19'/>\n                <Cards data={data}/>\n                <CountryPicker handleCountryChange={this.handleCountryChange}/>\n                <Chart data={data} country={country}/>\n            </div>\n        )\n    }\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom'\n\nimport App from './App'\n\n\nReactDOM.render(<App />, document.getElementById('root'))","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1MQN3\",\"image\":\"App_image__3byI1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__1PIOn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__31RYO\"};","module.exports = __webpack_public_path__ + \"static/media/covid19.d7265326.png\";"],"sourceRoot":""}